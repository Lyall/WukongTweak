#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BI_EquipItem_Slot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "b1MinusManaged_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BI_EquipItem_Slot.BI_EquipItem_Slot_C
// 0x00F0 (0x06F8 - 0x0608)
class UBI_EquipItem_Slot_C final : public UBUI_ButtonSpecialNone
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0608(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       GSAnimNormal_1;                                    // 0x0610(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimFocused_0;                                   // 0x0618(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinus; // 0x0620(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimLockActivedSpecial;                          // 0x0628(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimLockFocusedSpecial;                          // 0x0630(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimLockHoveredSpecial;                          // 0x0638(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimLockNormalSpecial;                           // 0x0640(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimDisableSpecial;                              // 0x0648(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimActivedSpecial;                              // 0x0650(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimFocusedSpecial;                              // 0x0658(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimHoveredSpecial;                              // 0x0660(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimNormalSpecial;                               // 0x0668(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinus; // 0x0670(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimLockActived;                                 // 0x0678(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimLockFocused;                                 // 0x0680(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimLockHovered;                                 // 0x0688(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimLockNormal;                                  // 0x0690(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimDisable;                                     // 0x0698(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimActived;                                     // 0x06A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimFocused;                                     // 0x06A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimHovered_bup;                                 // 0x06B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimNormal;                                      // 0x06B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinus; // 0x06C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimPressed;                                     // 0x06C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAKBStateAnim;                                    // 0x06D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UGSFocusWidget*                         FocusWidget;                                       // 0x06D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGSImage*                               ImgItem;                                           // 0x06E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImgRedPoint;                                       // 0x06E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGSImage*                               MarkerBase;                                        // 0x06F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void PreConstruct(bool IsDesignTime);
	void ExecuteUbergraph_BI_EquipItem_Slot(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BI_EquipItem_Slot_C">();
	}
	static class UBI_EquipItem_Slot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBI_EquipItem_Slot_C>();
	}
};
static_assert(alignof(UBI_EquipItem_Slot_C) == 0x000008, "Wrong alignment on UBI_EquipItem_Slot_C");
static_assert(sizeof(UBI_EquipItem_Slot_C) == 0x0006F8, "Wrong size on UBI_EquipItem_Slot_C");
static_assert(offsetof(UBI_EquipItem_Slot_C, UberGraphFrame) == 0x000608, "Member 'UBI_EquipItem_Slot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, GSAnimNormal_1) == 0x000610, "Member 'UBI_EquipItem_Slot_C::GSAnimNormal_1' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, GSAnimFocused_0) == 0x000618, "Member 'UBI_EquipItem_Slot_C::GSAnimFocused_0' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, MinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinus) == 0x000620, "Member 'UBI_EquipItem_Slot_C::MinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinus' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, GSAnimLockActivedSpecial) == 0x000628, "Member 'UBI_EquipItem_Slot_C::GSAnimLockActivedSpecial' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, GSAnimLockFocusedSpecial) == 0x000630, "Member 'UBI_EquipItem_Slot_C::GSAnimLockFocusedSpecial' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, GSAnimLockHoveredSpecial) == 0x000638, "Member 'UBI_EquipItem_Slot_C::GSAnimLockHoveredSpecial' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, GSAnimLockNormalSpecial) == 0x000640, "Member 'UBI_EquipItem_Slot_C::GSAnimLockNormalSpecial' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, GSAnimDisableSpecial) == 0x000648, "Member 'UBI_EquipItem_Slot_C::GSAnimDisableSpecial' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, GSAnimActivedSpecial) == 0x000650, "Member 'UBI_EquipItem_Slot_C::GSAnimActivedSpecial' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, GSAnimFocusedSpecial) == 0x000658, "Member 'UBI_EquipItem_Slot_C::GSAnimFocusedSpecial' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, GSAnimHoveredSpecial) == 0x000660, "Member 'UBI_EquipItem_Slot_C::GSAnimHoveredSpecial' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, GSAnimNormalSpecial) == 0x000668, "Member 'UBI_EquipItem_Slot_C::GSAnimNormalSpecial' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, MinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinus) == 0x000670, "Member 'UBI_EquipItem_Slot_C::MinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinus' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, GSAnimLockActived) == 0x000678, "Member 'UBI_EquipItem_Slot_C::GSAnimLockActived' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, GSAnimLockFocused) == 0x000680, "Member 'UBI_EquipItem_Slot_C::GSAnimLockFocused' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, GSAnimLockHovered) == 0x000688, "Member 'UBI_EquipItem_Slot_C::GSAnimLockHovered' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, GSAnimLockNormal) == 0x000690, "Member 'UBI_EquipItem_Slot_C::GSAnimLockNormal' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, GSAnimDisable) == 0x000698, "Member 'UBI_EquipItem_Slot_C::GSAnimDisable' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, GSAnimActived) == 0x0006A0, "Member 'UBI_EquipItem_Slot_C::GSAnimActived' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, GSAnimFocused) == 0x0006A8, "Member 'UBI_EquipItem_Slot_C::GSAnimFocused' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, GSAnimHovered_bup) == 0x0006B0, "Member 'UBI_EquipItem_Slot_C::GSAnimHovered_bup' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, GSAnimNormal) == 0x0006B8, "Member 'UBI_EquipItem_Slot_C::GSAnimNormal' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, MinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinus) == 0x0006C0, "Member 'UBI_EquipItem_Slot_C::MinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinus' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, GSAnimPressed) == 0x0006C8, "Member 'UBI_EquipItem_Slot_C::GSAnimPressed' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, GSAKBStateAnim) == 0x0006D0, "Member 'UBI_EquipItem_Slot_C::GSAKBStateAnim' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, FocusWidget) == 0x0006D8, "Member 'UBI_EquipItem_Slot_C::FocusWidget' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, ImgItem) == 0x0006E0, "Member 'UBI_EquipItem_Slot_C::ImgItem' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, ImgRedPoint) == 0x0006E8, "Member 'UBI_EquipItem_Slot_C::ImgRedPoint' has a wrong offset!");
static_assert(offsetof(UBI_EquipItem_Slot_C, MarkerBase) == 0x0006F0, "Member 'UBI_EquipItem_Slot_C::MarkerBase' has a wrong offset!");

}

