#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BI_CostItemKey

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function BI_CostItemKey.BI_CostItemKey_C.InitTxt
// 0x0120 (0x0120 - 0x0000)
struct BI_CostItemKey_C_InitTxt final
{
public:
	class UTextBlock*                             TxtObj;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               TxtAnchors;                                        // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FVector2D                              TxtAlignment;                                      // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              TxtPos;                                            // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            TxtColor;                                          // 0x0048(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         TxtFont;                                           // 0x0060(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FVector2D                              TxtShadowOffset;                                   // 0x00E8(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TxtShadowColor;                                    // 0x00F8(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  TxtJustification;                                  // 0x0108(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       K2Node_DynamicCast_As_____;                        // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_CostItemKey_C_InitTxt) == 0x000008, "Wrong alignment on BI_CostItemKey_C_InitTxt");
static_assert(sizeof(BI_CostItemKey_C_InitTxt) == 0x000120, "Wrong size on BI_CostItemKey_C_InitTxt");
static_assert(offsetof(BI_CostItemKey_C_InitTxt, TxtObj) == 0x000000, "Member 'BI_CostItemKey_C_InitTxt::TxtObj' has a wrong offset!");
static_assert(offsetof(BI_CostItemKey_C_InitTxt, TxtAnchors) == 0x000008, "Member 'BI_CostItemKey_C_InitTxt::TxtAnchors' has a wrong offset!");
static_assert(offsetof(BI_CostItemKey_C_InitTxt, TxtAlignment) == 0x000028, "Member 'BI_CostItemKey_C_InitTxt::TxtAlignment' has a wrong offset!");
static_assert(offsetof(BI_CostItemKey_C_InitTxt, TxtPos) == 0x000038, "Member 'BI_CostItemKey_C_InitTxt::TxtPos' has a wrong offset!");
static_assert(offsetof(BI_CostItemKey_C_InitTxt, TxtColor) == 0x000048, "Member 'BI_CostItemKey_C_InitTxt::TxtColor' has a wrong offset!");
static_assert(offsetof(BI_CostItemKey_C_InitTxt, TxtFont) == 0x000060, "Member 'BI_CostItemKey_C_InitTxt::TxtFont' has a wrong offset!");
static_assert(offsetof(BI_CostItemKey_C_InitTxt, TxtShadowOffset) == 0x0000E8, "Member 'BI_CostItemKey_C_InitTxt::TxtShadowOffset' has a wrong offset!");
static_assert(offsetof(BI_CostItemKey_C_InitTxt, TxtShadowColor) == 0x0000F8, "Member 'BI_CostItemKey_C_InitTxt::TxtShadowColor' has a wrong offset!");
static_assert(offsetof(BI_CostItemKey_C_InitTxt, TxtJustification) == 0x000108, "Member 'BI_CostItemKey_C_InitTxt::TxtJustification' has a wrong offset!");
static_assert(offsetof(BI_CostItemKey_C_InitTxt, K2Node_DynamicCast_As_____) == 0x000110, "Member 'BI_CostItemKey_C_InitTxt::K2Node_DynamicCast_As_____' has a wrong offset!");
static_assert(offsetof(BI_CostItemKey_C_InitTxt, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'BI_CostItemKey_C_InitTxt::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BI_CostItemKey.BI_CostItemKey_C.ExecuteUbergraph_BI_CostItemKey
// 0x0008 (0x0008 - 0x0000)
struct BI_CostItemKey_C_ExecuteUbergraph_BI_CostItemKey final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_CostItemKey_C_ExecuteUbergraph_BI_CostItemKey) == 0x000004, "Wrong alignment on BI_CostItemKey_C_ExecuteUbergraph_BI_CostItemKey");
static_assert(sizeof(BI_CostItemKey_C_ExecuteUbergraph_BI_CostItemKey) == 0x000008, "Wrong size on BI_CostItemKey_C_ExecuteUbergraph_BI_CostItemKey");
static_assert(offsetof(BI_CostItemKey_C_ExecuteUbergraph_BI_CostItemKey, EntryPoint) == 0x000000, "Member 'BI_CostItemKey_C_ExecuteUbergraph_BI_CostItemKey::EntryPoint' has a wrong offset!");
static_assert(offsetof(BI_CostItemKey_C_ExecuteUbergraph_BI_CostItemKey, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BI_CostItemKey_C_ExecuteUbergraph_BI_CostItemKey::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function BI_CostItemKey.BI_CostItemKey_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BI_CostItemKey_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_CostItemKey_C_PreConstruct) == 0x000001, "Wrong alignment on BI_CostItemKey_C_PreConstruct");
static_assert(sizeof(BI_CostItemKey_C_PreConstruct) == 0x000001, "Wrong size on BI_CostItemKey_C_PreConstruct");
static_assert(offsetof(BI_CostItemKey_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BI_CostItemKey_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BI_CostItemKey.BI_CostItemKey_C.InitUI
// 0x0110 (0x0110 - 0x0000)
struct BI_CostItemKey_C_InitUI final
{
public:
	class UImage*                                 Obj;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            Brush;                                             // 0x0010(0x00D0)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FVector2D                              Size;                                              // 0x00E0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Pos;                                               // 0x00F0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       K2Node_DynamicCast_As_____;                        // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_CostItemKey_C_InitUI) == 0x000010, "Wrong alignment on BI_CostItemKey_C_InitUI");
static_assert(sizeof(BI_CostItemKey_C_InitUI) == 0x000110, "Wrong size on BI_CostItemKey_C_InitUI");
static_assert(offsetof(BI_CostItemKey_C_InitUI, Obj) == 0x000000, "Member 'BI_CostItemKey_C_InitUI::Obj' has a wrong offset!");
static_assert(offsetof(BI_CostItemKey_C_InitUI, Brush) == 0x000010, "Member 'BI_CostItemKey_C_InitUI::Brush' has a wrong offset!");
static_assert(offsetof(BI_CostItemKey_C_InitUI, Size) == 0x0000E0, "Member 'BI_CostItemKey_C_InitUI::Size' has a wrong offset!");
static_assert(offsetof(BI_CostItemKey_C_InitUI, Pos) == 0x0000F0, "Member 'BI_CostItemKey_C_InitUI::Pos' has a wrong offset!");
static_assert(offsetof(BI_CostItemKey_C_InitUI, K2Node_DynamicCast_As_____) == 0x000100, "Member 'BI_CostItemKey_C_InitUI::K2Node_DynamicCast_As_____' has a wrong offset!");
static_assert(offsetof(BI_CostItemKey_C_InitUI, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'BI_CostItemKey_C_InitUI::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

