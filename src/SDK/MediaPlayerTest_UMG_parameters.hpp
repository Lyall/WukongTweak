#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MediaPlayerTest_UMG

#include "Basic.hpp"


namespace SDK::Params
{

// Function MediaPlayerTest_UMG.MediaPlayerTest_UMG_C.ExecuteUbergraph_MediaPlayerTest_UMG
// 0x0020 (0x0020 - 0x0000)
struct MediaPlayerTest_UMG_C_ExecuteUbergraph_MediaPlayerTest_UMG final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OpenSource_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue_1;                       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_OpenUrl_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MediaPlayerTest_UMG_C_ExecuteUbergraph_MediaPlayerTest_UMG) == 0x000008, "Wrong alignment on MediaPlayerTest_UMG_C_ExecuteUbergraph_MediaPlayerTest_UMG");
static_assert(sizeof(MediaPlayerTest_UMG_C_ExecuteUbergraph_MediaPlayerTest_UMG) == 0x000020, "Wrong size on MediaPlayerTest_UMG_C_ExecuteUbergraph_MediaPlayerTest_UMG");
static_assert(offsetof(MediaPlayerTest_UMG_C_ExecuteUbergraph_MediaPlayerTest_UMG, EntryPoint) == 0x000000, "Member 'MediaPlayerTest_UMG_C_ExecuteUbergraph_MediaPlayerTest_UMG::EntryPoint' has a wrong offset!");
static_assert(offsetof(MediaPlayerTest_UMG_C_ExecuteUbergraph_MediaPlayerTest_UMG, CallFunc_OpenSource_ReturnValue) == 0x000004, "Member 'MediaPlayerTest_UMG_C_ExecuteUbergraph_MediaPlayerTest_UMG::CallFunc_OpenSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(MediaPlayerTest_UMG_C_ExecuteUbergraph_MediaPlayerTest_UMG, CallFunc_Play_ReturnValue) == 0x000005, "Member 'MediaPlayerTest_UMG_C_ExecuteUbergraph_MediaPlayerTest_UMG::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(MediaPlayerTest_UMG_C_ExecuteUbergraph_MediaPlayerTest_UMG, CallFunc_Play_ReturnValue_1) == 0x000006, "Member 'MediaPlayerTest_UMG_C_ExecuteUbergraph_MediaPlayerTest_UMG::CallFunc_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MediaPlayerTest_UMG_C_ExecuteUbergraph_MediaPlayerTest_UMG, CallFunc_MakeLiteralString_ReturnValue) == 0x000008, "Member 'MediaPlayerTest_UMG_C_ExecuteUbergraph_MediaPlayerTest_UMG::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MediaPlayerTest_UMG_C_ExecuteUbergraph_MediaPlayerTest_UMG, CallFunc_OpenUrl_ReturnValue) == 0x000018, "Member 'MediaPlayerTest_UMG_C_ExecuteUbergraph_MediaPlayerTest_UMG::CallFunc_OpenUrl_ReturnValue' has a wrong offset!");

}

