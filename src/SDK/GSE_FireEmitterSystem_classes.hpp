#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GSE_FireEmitterSystem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GSE_FireEmitterSystem.GSE_FireEmitterSystem_C
// 0x0028 (0x02A0 - 0x0278)
class AGSE_FireEmitterSystem_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneCaptureComponent2D*               SceneCaptureComponent2D1;                          // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Niagara;                                           // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_FirePlane;                                      // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        LandWidth;                                         // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CaptureRT();
	void ExecuteUbergraph_GSE_FireEmitterSystem(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GSE_FireEmitterSystem_C">();
	}
	static class AGSE_FireEmitterSystem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGSE_FireEmitterSystem_C>();
	}
};
static_assert(alignof(AGSE_FireEmitterSystem_C) == 0x000008, "Wrong alignment on AGSE_FireEmitterSystem_C");
static_assert(sizeof(AGSE_FireEmitterSystem_C) == 0x0002A0, "Wrong size on AGSE_FireEmitterSystem_C");
static_assert(offsetof(AGSE_FireEmitterSystem_C, UberGraphFrame) == 0x000278, "Member 'AGSE_FireEmitterSystem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGSE_FireEmitterSystem_C, SceneCaptureComponent2D1) == 0x000280, "Member 'AGSE_FireEmitterSystem_C::SceneCaptureComponent2D1' has a wrong offset!");
static_assert(offsetof(AGSE_FireEmitterSystem_C, Niagara) == 0x000288, "Member 'AGSE_FireEmitterSystem_C::Niagara' has a wrong offset!");
static_assert(offsetof(AGSE_FireEmitterSystem_C, SM_FirePlane) == 0x000290, "Member 'AGSE_FireEmitterSystem_C::SM_FirePlane' has a wrong offset!");
static_assert(offsetof(AGSE_FireEmitterSystem_C, LandWidth) == 0x000298, "Member 'AGSE_FireEmitterSystem_C::LandWidth' has a wrong offset!");

}

