#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GMActor

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "UMG_structs.hpp"
#include "b1MinusManaged_structs.hpp"


namespace SDK::Params
{

// Function BP_GMActor.BP_GMActor_C.InpActEvt_Pause_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_GMActor_C_InpActEvt_Pause_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMActor_C_InpActEvt_Pause_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BP_GMActor_C_InpActEvt_Pause_K2Node_InputKeyEvent_0");
static_assert(sizeof(BP_GMActor_C_InpActEvt_Pause_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BP_GMActor_C_InpActEvt_Pause_K2Node_InputKeyEvent_0");
static_assert(offsetof(BP_GMActor_C_InpActEvt_Pause_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BP_GMActor_C_InpActEvt_Pause_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BP_GMActor.BP_GMActor_C.InpActEvt_NumPadZero_K2Node_InputKeyEvent_11
// 0x0018 (0x0018 - 0x0000)
struct BP_GMActor_C_InpActEvt_NumPadZero_K2Node_InputKeyEvent_11 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMActor_C_InpActEvt_NumPadZero_K2Node_InputKeyEvent_11) == 0x000008, "Wrong alignment on BP_GMActor_C_InpActEvt_NumPadZero_K2Node_InputKeyEvent_11");
static_assert(sizeof(BP_GMActor_C_InpActEvt_NumPadZero_K2Node_InputKeyEvent_11) == 0x000018, "Wrong size on BP_GMActor_C_InpActEvt_NumPadZero_K2Node_InputKeyEvent_11");
static_assert(offsetof(BP_GMActor_C_InpActEvt_NumPadZero_K2Node_InputKeyEvent_11, Key) == 0x000000, "Member 'BP_GMActor_C_InpActEvt_NumPadZero_K2Node_InputKeyEvent_11::Key' has a wrong offset!");

// Function BP_GMActor.BP_GMActor_C.InpActEvt_NumPadSeven_K2Node_InputKeyEvent_8
// 0x0018 (0x0018 - 0x0000)
struct BP_GMActor_C_InpActEvt_NumPadSeven_K2Node_InputKeyEvent_8 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMActor_C_InpActEvt_NumPadSeven_K2Node_InputKeyEvent_8) == 0x000008, "Wrong alignment on BP_GMActor_C_InpActEvt_NumPadSeven_K2Node_InputKeyEvent_8");
static_assert(sizeof(BP_GMActor_C_InpActEvt_NumPadSeven_K2Node_InputKeyEvent_8) == 0x000018, "Wrong size on BP_GMActor_C_InpActEvt_NumPadSeven_K2Node_InputKeyEvent_8");
static_assert(offsetof(BP_GMActor_C_InpActEvt_NumPadSeven_K2Node_InputKeyEvent_8, Key) == 0x000000, "Member 'BP_GMActor_C_InpActEvt_NumPadSeven_K2Node_InputKeyEvent_8::Key' has a wrong offset!");

// Function BP_GMActor.BP_GMActor_C.InpActEvt_NumPadNine_K2Node_InputKeyEvent_9
// 0x0018 (0x0018 - 0x0000)
struct BP_GMActor_C_InpActEvt_NumPadNine_K2Node_InputKeyEvent_9 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMActor_C_InpActEvt_NumPadNine_K2Node_InputKeyEvent_9) == 0x000008, "Wrong alignment on BP_GMActor_C_InpActEvt_NumPadNine_K2Node_InputKeyEvent_9");
static_assert(sizeof(BP_GMActor_C_InpActEvt_NumPadNine_K2Node_InputKeyEvent_9) == 0x000018, "Wrong size on BP_GMActor_C_InpActEvt_NumPadNine_K2Node_InputKeyEvent_9");
static_assert(offsetof(BP_GMActor_C_InpActEvt_NumPadNine_K2Node_InputKeyEvent_9, Key) == 0x000000, "Member 'BP_GMActor_C_InpActEvt_NumPadNine_K2Node_InputKeyEvent_9::Key' has a wrong offset!");

// Function BP_GMActor.BP_GMActor_C.InpActEvt_NumPadFive_K2Node_InputKeyEvent_7
// 0x0018 (0x0018 - 0x0000)
struct BP_GMActor_C_InpActEvt_NumPadFive_K2Node_InputKeyEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMActor_C_InpActEvt_NumPadFive_K2Node_InputKeyEvent_7) == 0x000008, "Wrong alignment on BP_GMActor_C_InpActEvt_NumPadFive_K2Node_InputKeyEvent_7");
static_assert(sizeof(BP_GMActor_C_InpActEvt_NumPadFive_K2Node_InputKeyEvent_7) == 0x000018, "Wrong size on BP_GMActor_C_InpActEvt_NumPadFive_K2Node_InputKeyEvent_7");
static_assert(offsetof(BP_GMActor_C_InpActEvt_NumPadFive_K2Node_InputKeyEvent_7, Key) == 0x000000, "Member 'BP_GMActor_C_InpActEvt_NumPadFive_K2Node_InputKeyEvent_7::Key' has a wrong offset!");

// Function BP_GMActor.BP_GMActor_C.InpActEvt_NumPadEight_K2Node_InputKeyEvent_10
// 0x0018 (0x0018 - 0x0000)
struct BP_GMActor_C_InpActEvt_NumPadEight_K2Node_InputKeyEvent_10 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMActor_C_InpActEvt_NumPadEight_K2Node_InputKeyEvent_10) == 0x000008, "Wrong alignment on BP_GMActor_C_InpActEvt_NumPadEight_K2Node_InputKeyEvent_10");
static_assert(sizeof(BP_GMActor_C_InpActEvt_NumPadEight_K2Node_InputKeyEvent_10) == 0x000018, "Wrong size on BP_GMActor_C_InpActEvt_NumPadEight_K2Node_InputKeyEvent_10");
static_assert(offsetof(BP_GMActor_C_InpActEvt_NumPadEight_K2Node_InputKeyEvent_10, Key) == 0x000000, "Member 'BP_GMActor_C_InpActEvt_NumPadEight_K2Node_InputKeyEvent_10::Key' has a wrong offset!");

// Function BP_GMActor.BP_GMActor_C.InpActEvt_H_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_GMActor_C_InpActEvt_H_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMActor_C_InpActEvt_H_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on BP_GMActor_C_InpActEvt_H_K2Node_InputKeyEvent_1");
static_assert(sizeof(BP_GMActor_C_InpActEvt_H_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on BP_GMActor_C_InpActEvt_H_K2Node_InputKeyEvent_1");
static_assert(offsetof(BP_GMActor_C_InpActEvt_H_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'BP_GMActor_C_InpActEvt_H_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function BP_GMActor.BP_GMActor_C.InpActEvt_Gamepad_Special_Right_K2Node_InputKeyEvent_4
// 0x0018 (0x0018 - 0x0000)
struct BP_GMActor_C_InpActEvt_Gamepad_Special_Right_K2Node_InputKeyEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMActor_C_InpActEvt_Gamepad_Special_Right_K2Node_InputKeyEvent_4) == 0x000008, "Wrong alignment on BP_GMActor_C_InpActEvt_Gamepad_Special_Right_K2Node_InputKeyEvent_4");
static_assert(sizeof(BP_GMActor_C_InpActEvt_Gamepad_Special_Right_K2Node_InputKeyEvent_4) == 0x000018, "Wrong size on BP_GMActor_C_InpActEvt_Gamepad_Special_Right_K2Node_InputKeyEvent_4");
static_assert(offsetof(BP_GMActor_C_InpActEvt_Gamepad_Special_Right_K2Node_InputKeyEvent_4, Key) == 0x000000, "Member 'BP_GMActor_C_InpActEvt_Gamepad_Special_Right_K2Node_InputKeyEvent_4::Key' has a wrong offset!");

// Function BP_GMActor.BP_GMActor_C.InpActEvt_Gamepad_Special_Right_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_GMActor_C_InpActEvt_Gamepad_Special_Right_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMActor_C_InpActEvt_Gamepad_Special_Right_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on BP_GMActor_C_InpActEvt_Gamepad_Special_Right_K2Node_InputKeyEvent_3");
static_assert(sizeof(BP_GMActor_C_InpActEvt_Gamepad_Special_Right_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on BP_GMActor_C_InpActEvt_Gamepad_Special_Right_K2Node_InputKeyEvent_3");
static_assert(offsetof(BP_GMActor_C_InpActEvt_Gamepad_Special_Right_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'BP_GMActor_C_InpActEvt_Gamepad_Special_Right_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function BP_GMActor.BP_GMActor_C.InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_6
// 0x0018 (0x0018 - 0x0000)
struct BP_GMActor_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMActor_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_6) == 0x000008, "Wrong alignment on BP_GMActor_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_6");
static_assert(sizeof(BP_GMActor_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_6) == 0x000018, "Wrong size on BP_GMActor_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_6");
static_assert(offsetof(BP_GMActor_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_6, Key) == 0x000000, "Member 'BP_GMActor_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_6::Key' has a wrong offset!");

// Function BP_GMActor.BP_GMActor_C.InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_5
// 0x0018 (0x0018 - 0x0000)
struct BP_GMActor_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMActor_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_5) == 0x000008, "Wrong alignment on BP_GMActor_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_5");
static_assert(sizeof(BP_GMActor_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_5) == 0x000018, "Wrong size on BP_GMActor_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_5");
static_assert(offsetof(BP_GMActor_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_5, Key) == 0x000000, "Member 'BP_GMActor_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_5::Key' has a wrong offset!");

// Function BP_GMActor.BP_GMActor_C.InpActEvt_Five_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_GMActor_C_InpActEvt_Five_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMActor_C_InpActEvt_Five_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on BP_GMActor_C_InpActEvt_Five_K2Node_InputKeyEvent_2");
static_assert(sizeof(BP_GMActor_C_InpActEvt_Five_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on BP_GMActor_C_InpActEvt_Five_K2Node_InputKeyEvent_2");
static_assert(offsetof(BP_GMActor_C_InpActEvt_Five_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'BP_GMActor_C_InpActEvt_Five_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function BP_GMActor.BP_GMActor_C.InpActEvt_F1_K2Node_InputKeyEvent_14
// 0x0018 (0x0018 - 0x0000)
struct BP_GMActor_C_InpActEvt_F1_K2Node_InputKeyEvent_14 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMActor_C_InpActEvt_F1_K2Node_InputKeyEvent_14) == 0x000008, "Wrong alignment on BP_GMActor_C_InpActEvt_F1_K2Node_InputKeyEvent_14");
static_assert(sizeof(BP_GMActor_C_InpActEvt_F1_K2Node_InputKeyEvent_14) == 0x000018, "Wrong size on BP_GMActor_C_InpActEvt_F1_K2Node_InputKeyEvent_14");
static_assert(offsetof(BP_GMActor_C_InpActEvt_F1_K2Node_InputKeyEvent_14, Key) == 0x000000, "Member 'BP_GMActor_C_InpActEvt_F1_K2Node_InputKeyEvent_14::Key' has a wrong offset!");

// Function BP_GMActor.BP_GMActor_C.InpActEvt_Divide_K2Node_InputKeyEvent_13
// 0x0018 (0x0018 - 0x0000)
struct BP_GMActor_C_InpActEvt_Divide_K2Node_InputKeyEvent_13 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMActor_C_InpActEvt_Divide_K2Node_InputKeyEvent_13) == 0x000008, "Wrong alignment on BP_GMActor_C_InpActEvt_Divide_K2Node_InputKeyEvent_13");
static_assert(sizeof(BP_GMActor_C_InpActEvt_Divide_K2Node_InputKeyEvent_13) == 0x000018, "Wrong size on BP_GMActor_C_InpActEvt_Divide_K2Node_InputKeyEvent_13");
static_assert(offsetof(BP_GMActor_C_InpActEvt_Divide_K2Node_InputKeyEvent_13, Key) == 0x000000, "Member 'BP_GMActor_C_InpActEvt_Divide_K2Node_InputKeyEvent_13::Key' has a wrong offset!");

// Function BP_GMActor.BP_GMActor_C.InpActEvt_Ctrl_NumPadZero_K2Node_InputKeyEvent_12
// 0x0018 (0x0018 - 0x0000)
struct BP_GMActor_C_InpActEvt_Ctrl_NumPadZero_K2Node_InputKeyEvent_12 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMActor_C_InpActEvt_Ctrl_NumPadZero_K2Node_InputKeyEvent_12) == 0x000008, "Wrong alignment on BP_GMActor_C_InpActEvt_Ctrl_NumPadZero_K2Node_InputKeyEvent_12");
static_assert(sizeof(BP_GMActor_C_InpActEvt_Ctrl_NumPadZero_K2Node_InputKeyEvent_12) == 0x000018, "Wrong size on BP_GMActor_C_InpActEvt_Ctrl_NumPadZero_K2Node_InputKeyEvent_12");
static_assert(offsetof(BP_GMActor_C_InpActEvt_Ctrl_NumPadZero_K2Node_InputKeyEvent_12, Key) == 0x000000, "Member 'BP_GMActor_C_InpActEvt_Ctrl_NumPadZero_K2Node_InputKeyEvent_12::Key' has a wrong offset!");

// Function BP_GMActor.BP_GMActor_C.InpActEvt_Ctrl+Alt+Shift_K_K2Node_InputKeyEvent_15
// 0x0018 (0x0018 - 0x0000)
struct BP_GMActor_C_InpActEvt_CtrlPlusAltPlusShift_K_K2Node_InputKeyEvent_15 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMActor_C_InpActEvt_CtrlPlusAltPlusShift_K_K2Node_InputKeyEvent_15) == 0x000008, "Wrong alignment on BP_GMActor_C_InpActEvt_CtrlPlusAltPlusShift_K_K2Node_InputKeyEvent_15");
static_assert(sizeof(BP_GMActor_C_InpActEvt_CtrlPlusAltPlusShift_K_K2Node_InputKeyEvent_15) == 0x000018, "Wrong size on BP_GMActor_C_InpActEvt_CtrlPlusAltPlusShift_K_K2Node_InputKeyEvent_15");
static_assert(offsetof(BP_GMActor_C_InpActEvt_CtrlPlusAltPlusShift_K_K2Node_InputKeyEvent_15, Key) == 0x000000, "Member 'BP_GMActor_C_InpActEvt_CtrlPlusAltPlusShift_K_K2Node_InputKeyEvent_15::Key' has a wrong offset!");

// Function BP_GMActor.BP_GMActor_C.InitGMFunctions
// 0x0018 (0x0018 - 0x0000)
struct BP_GMActor_C_InitGMFunctions final
{
public:
	TArray<class UBP_UI_GMDefaultPanel_C*>        CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_UI_GMDefaultPanel_C*                CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMActor_C_InitGMFunctions) == 0x000008, "Wrong alignment on BP_GMActor_C_InitGMFunctions");
static_assert(sizeof(BP_GMActor_C_InitGMFunctions) == 0x000018, "Wrong size on BP_GMActor_C_InitGMFunctions");
static_assert(offsetof(BP_GMActor_C_InitGMFunctions, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000000, "Member 'BP_GMActor_C_InitGMFunctions::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_InitGMFunctions, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_GMActor_C_InitGMFunctions::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_GMActor.BP_GMActor_C.GMInfoShowOrNot
// 0x0030 (0x0030 - 0x0000)
struct BP_GMActor_C_GMInfoShowOrNot final
{
public:
	class UBUI_Widget*                            Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 WidgetClass;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowOrNot;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBUI_Widget*                            CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_UI_GMInfo_Player_C*                 K2Node_DynamicCast_AsBP_UI_GMInfo_Player;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMActor_C_GMInfoShowOrNot) == 0x000008, "Wrong alignment on BP_GMActor_C_GMInfoShowOrNot");
static_assert(sizeof(BP_GMActor_C_GMInfoShowOrNot) == 0x000030, "Wrong size on BP_GMActor_C_GMInfoShowOrNot");
static_assert(offsetof(BP_GMActor_C_GMInfoShowOrNot, Widget) == 0x000000, "Member 'BP_GMActor_C_GMInfoShowOrNot::Widget' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_GMInfoShowOrNot, WidgetClass) == 0x000008, "Member 'BP_GMActor_C_GMInfoShowOrNot::WidgetClass' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_GMInfoShowOrNot, ShowOrNot) == 0x000010, "Member 'BP_GMActor_C_GMInfoShowOrNot::ShowOrNot' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_GMInfoShowOrNot, CallFunc_Create_ReturnValue) == 0x000018, "Member 'BP_GMActor_C_GMInfoShowOrNot::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_GMInfoShowOrNot, K2Node_DynamicCast_AsBP_UI_GMInfo_Player) == 0x000020, "Member 'BP_GMActor_C_GMInfoShowOrNot::K2Node_DynamicCast_AsBP_UI_GMInfo_Player' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_GMInfoShowOrNot, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_GMActor_C_GMInfoShowOrNot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_GMInfoShowOrNot, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_GMActor_C_GMInfoShowOrNot::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GMActor.BP_GMActor_C.ExecuteUbergraph_BP_GMActor
// 0x0250 (0x0250 - 0x0000)
struct BP_GMActor_C_ExecuteUbergraph_BP_GMActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUEDebugGMLevel_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_4;                        // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x0020(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0038(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0050(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0068(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0080(0x0018)(HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetFirstLocalPlayerController_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetFirstLocalPlayerController_ReturnValue_1; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABGUCharacterCS*                        K2Node_DynamicCast_AsBGUCharacter_CS;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABGUCharacterCS*                        K2Node_DynamicCast_AsBGUCharacter_CS_1;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BGUHasBuffByID_ReturnValue;               // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BGUHasBuffByID_ReturnValue_1;             // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D3[0x1];                                       // 0x00D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_5;                        // 0x00D8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_1;                            // 0x00F0(0x0018)(HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_6;                        // 0x0110(0x0018)(HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_7;                        // 0x0140(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_8;                        // 0x0158(0x0018)(HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_173[0x5];                                      // 0x0173(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_9;                        // 0x0178(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_10;                       // 0x0190(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_11;                       // 0x01A8(0x0018)(HasGetValueTypeHash)
	class UBP_UI_Debug_RT_C*                      CallFunc_Create_ReturnValue;                       // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_12;                       // 0x01C8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_13;                       // 0x01E0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_14;                       // 0x01F8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsCheatGMLevel_ReturnValue;               // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebugGMLevel_ReturnValue;               // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebugGMLevel_ReturnValue_1;             // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebugGMLevel_ReturnValue_2;             // 0x0213(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebugGMLevel_ReturnValue_3;             // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebugGMLevel_ReturnValue_4;             // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0216(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_217[0x1];                                      // 0x0217(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_15;                       // 0x0228(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsDebugGMLevel_ReturnValue_5;             // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebugGMLevel_ReturnValue_6;             // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebugGMLevel_ReturnValue_7;             // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUEDebugGMLevel_ReturnValue_1;           // 0x024B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetGlobalTimeDilation_TimeDilation_NarrowingCast; // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor) == 0x000008, "Wrong alignment on BP_GMActor_C_ExecuteUbergraph_BP_GMActor");
static_assert(sizeof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor) == 0x000250, "Wrong size on BP_GMActor_C_ExecuteUbergraph_BP_GMActor");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, EntryPoint) == 0x000000, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_IsUEDebugGMLevel_ReturnValue) == 0x000004, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_IsUEDebugGMLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, K2Node_InputKeyEvent_Key_4) == 0x000008, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::K2Node_InputKeyEvent_Key_4' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, K2Node_InputKeyEvent_Key_3) == 0x000020, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, Temp_struct_Variable) == 0x000038, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, K2Node_InputKeyEvent_Key_2) == 0x000050, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, K2Node_InputKeyEvent_Key_1) == 0x000068, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, K2Node_InputKeyEvent_Key) == 0x000080, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_GetFirstLocalPlayerController_ReturnValue) == 0x000098, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_GetFirstLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_GetFirstLocalPlayerController_ReturnValue_1) == 0x0000A0, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_GetFirstLocalPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_K2_GetPawn_ReturnValue) == 0x0000A8, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_K2_GetPawn_ReturnValue_1) == 0x0000B0, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, K2Node_DynamicCast_AsBGUCharacter_CS) == 0x0000B8, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::K2Node_DynamicCast_AsBGUCharacter_CS' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, K2Node_DynamicCast_AsBGUCharacter_CS_1) == 0x0000C8, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::K2Node_DynamicCast_AsBGUCharacter_CS_1' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_BGUHasBuffByID_ReturnValue) == 0x0000D1, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_BGUHasBuffByID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_BGUHasBuffByID_ReturnValue_1) == 0x0000D2, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_BGUHasBuffByID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_Add_IntInt_ReturnValue) == 0x0000D4, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, K2Node_InputKeyEvent_Key_5) == 0x0000D8, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::K2Node_InputKeyEvent_Key_5' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, Temp_struct_Variable_1) == 0x0000F0, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_GetPlayerController_ReturnValue) == 0x000108, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, K2Node_InputKeyEvent_Key_6) == 0x000110, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::K2Node_InputKeyEvent_Key_6' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_GetPlayerController_ReturnValue_1) == 0x000128, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_BooleanAND_ReturnValue) == 0x000130, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_GetPlayerController_ReturnValue_2) == 0x000138, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, K2Node_InputKeyEvent_Key_7) == 0x000140, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::K2Node_InputKeyEvent_Key_7' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, K2Node_InputKeyEvent_Key_8) == 0x000158, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::K2Node_InputKeyEvent_Key_8' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_GetVisibility_ReturnValue) == 0x000170, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_IsValid_ReturnValue) == 0x000171, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000172, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, K2Node_InputKeyEvent_Key_9) == 0x000178, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::K2Node_InputKeyEvent_Key_9' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, K2Node_InputKeyEvent_Key_10) == 0x000190, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::K2Node_InputKeyEvent_Key_10' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, K2Node_InputKeyEvent_Key_11) == 0x0001A8, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::K2Node_InputKeyEvent_Key_11' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_Create_ReturnValue) == 0x0001C0, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, K2Node_InputKeyEvent_Key_12) == 0x0001C8, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::K2Node_InputKeyEvent_Key_12' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, K2Node_InputKeyEvent_Key_13) == 0x0001E0, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::K2Node_InputKeyEvent_Key_13' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, K2Node_InputKeyEvent_Key_14) == 0x0001F8, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::K2Node_InputKeyEvent_Key_14' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_IsCheatGMLevel_ReturnValue) == 0x000210, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_IsCheatGMLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_IsDebugGMLevel_ReturnValue) == 0x000211, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_IsDebugGMLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_IsDebugGMLevel_ReturnValue_1) == 0x000212, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_IsDebugGMLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_IsDebugGMLevel_ReturnValue_2) == 0x000213, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_IsDebugGMLevel_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_IsDebugGMLevel_ReturnValue_3) == 0x000214, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_IsDebugGMLevel_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_IsDebugGMLevel_ReturnValue_4) == 0x000215, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_IsDebugGMLevel_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000216, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000218, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, K2Node_InputKeyEvent_Key_15) == 0x000228, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::K2Node_InputKeyEvent_Key_15' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_IsDebugGMLevel_ReturnValue_5) == 0x000240, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_IsDebugGMLevel_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_Percent_IntInt_ReturnValue) == 0x000244, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, K2Node_SwitchInteger_CmpSuccess) == 0x000248, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_IsDebugGMLevel_ReturnValue_6) == 0x000249, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_IsDebugGMLevel_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_IsDebugGMLevel_ReturnValue_7) == 0x00024A, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_IsDebugGMLevel_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_IsUEDebugGMLevel_ReturnValue_1) == 0x00024B, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_IsUEDebugGMLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_ExecuteUbergraph_BP_GMActor, CallFunc_SetGlobalTimeDilation_TimeDilation_NarrowingCast) == 0x00024C, "Member 'BP_GMActor_C_ExecuteUbergraph_BP_GMActor::CallFunc_SetGlobalTimeDilation_TimeDilation_NarrowingCast' has a wrong offset!");

// Function BP_GMActor.BP_GMActor_C.EnableMouseCursor
// 0x0010 (0x0010 - 0x0000)
struct BP_GMActor_C_EnableMouseCursor final
{
public:
	EGSInputModeChangeReason                      ChangeReason;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                NewLocalVar_0;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMActor_C_EnableMouseCursor) == 0x000008, "Wrong alignment on BP_GMActor_C_EnableMouseCursor");
static_assert(sizeof(BP_GMActor_C_EnableMouseCursor) == 0x000010, "Wrong size on BP_GMActor_C_EnableMouseCursor");
static_assert(offsetof(BP_GMActor_C_EnableMouseCursor, ChangeReason) == 0x000000, "Member 'BP_GMActor_C_EnableMouseCursor::ChangeReason' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_EnableMouseCursor, NewLocalVar_0) == 0x000008, "Member 'BP_GMActor_C_EnableMouseCursor::NewLocalVar_0' has a wrong offset!");

// Function BP_GMActor.BP_GMActor_C.DisableMouseCursor
// 0x0001 (0x0001 - 0x0000)
struct BP_GMActor_C_DisableMouseCursor final
{
public:
	EGSInputModeChangeReason                      ChangeReason;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMActor_C_DisableMouseCursor) == 0x000001, "Wrong alignment on BP_GMActor_C_DisableMouseCursor");
static_assert(sizeof(BP_GMActor_C_DisableMouseCursor) == 0x000001, "Wrong size on BP_GMActor_C_DisableMouseCursor");
static_assert(offsetof(BP_GMActor_C_DisableMouseCursor, ChangeReason) == 0x000000, "Member 'BP_GMActor_C_DisableMouseCursor::ChangeReason' has a wrong offset!");

// Function BP_GMActor.BP_GMActor_C.DisableGMPanel
// 0x0008 (0x0008 - 0x0000)
struct BP_GMActor_C_DisableGMPanel final
{
public:
	int32                                         CallFunc_BGUGetActiveGameMode_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GMActor_C_DisableGMPanel) == 0x000004, "Wrong alignment on BP_GMActor_C_DisableGMPanel");
static_assert(sizeof(BP_GMActor_C_DisableGMPanel) == 0x000008, "Wrong size on BP_GMActor_C_DisableGMPanel");
static_assert(offsetof(BP_GMActor_C_DisableGMPanel, CallFunc_BGUGetActiveGameMode_ReturnValue) == 0x000000, "Member 'BP_GMActor_C_DisableGMPanel::CallFunc_BGUGetActiveGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_DisableGMPanel, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_GMActor_C_DisableGMPanel::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_DisableGMPanel, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BP_GMActor_C_DisableGMPanel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_DisableGMPanel, CallFunc_GetVisibility_ReturnValue) == 0x000006, "Member 'BP_GMActor_C_DisableGMPanel::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GMActor_C_DisableGMPanel, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000007, "Member 'BP_GMActor_C_DisableGMPanel::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

}

