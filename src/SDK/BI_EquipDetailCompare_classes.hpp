#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BI_EquipDetailCompare

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "b1MinusManaged_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BI_EquipDetailCompare.BI_EquipDetailCompare_C
// 0x0048 (0x0420 - 0x03D8)
class UBI_EquipDetailCompare_C final : public UBUI_Widget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimForged;                                        // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimBuildCheckIsCompare;                           // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimBuildCheckNotCompare;                          // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBI_EquipDetail_C*                      BI_EquipCompare;                                   // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBI_EquipDetail_C*                      BI_EquipDetail;                                    // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGSImage*                               ImgArrow_D;                                        // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGSImage*                               ImgArrow_T;                                        // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImgBgMask;                                         // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void SequenceEvent__ENTRYPOINTBI_EquipDetailCompare_7();
	void SequenceEvent__ENTRYPOINTBI_EquipDetailCompare_6();
	void SequenceEvent__ENTRYPOINTBI_EquipDetailCompare_5();
	void SequenceEvent__ENTRYPOINTBI_EquipDetailCompare_4();
	void SequenceEvent__ENTRYPOINTBI_EquipDetailCompare_3();
	void SequenceEvent__ENTRYPOINTBI_EquipDetailCompare_2();
	void SequenceEvent__ENTRYPOINTBI_EquipDetailCompare_1();
	void SequenceEvent__ENTRYPOINTBI_EquipDetailCompare_0();
	void ExecuteUbergraph_BI_EquipDetailCompare(int32 EntryPoint);
	void AnimBuildCheckNotCompareEvent(const class FString& EventName);
	void AnimBuildCheckIsCompareEvent(const class FString& EventName);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BI_EquipDetailCompare_C">();
	}
	static class UBI_EquipDetailCompare_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBI_EquipDetailCompare_C>();
	}
};
static_assert(alignof(UBI_EquipDetailCompare_C) == 0x000008, "Wrong alignment on UBI_EquipDetailCompare_C");
static_assert(sizeof(UBI_EquipDetailCompare_C) == 0x000420, "Wrong size on UBI_EquipDetailCompare_C");
static_assert(offsetof(UBI_EquipDetailCompare_C, UberGraphFrame) == 0x0003D8, "Member 'UBI_EquipDetailCompare_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetailCompare_C, AnimForged) == 0x0003E0, "Member 'UBI_EquipDetailCompare_C::AnimForged' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetailCompare_C, AnimBuildCheckIsCompare) == 0x0003E8, "Member 'UBI_EquipDetailCompare_C::AnimBuildCheckIsCompare' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetailCompare_C, AnimBuildCheckNotCompare) == 0x0003F0, "Member 'UBI_EquipDetailCompare_C::AnimBuildCheckNotCompare' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetailCompare_C, BI_EquipCompare) == 0x0003F8, "Member 'UBI_EquipDetailCompare_C::BI_EquipCompare' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetailCompare_C, BI_EquipDetail) == 0x000400, "Member 'UBI_EquipDetailCompare_C::BI_EquipDetail' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetailCompare_C, ImgArrow_D) == 0x000408, "Member 'UBI_EquipDetailCompare_C::ImgArrow_D' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetailCompare_C, ImgArrow_T) == 0x000410, "Member 'UBI_EquipDetailCompare_C::ImgArrow_T' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetailCompare_C, ImgBgMask) == 0x000418, "Member 'UBI_EquipDetailCompare_C::ImgBgMask' has a wrong offset!");

}

