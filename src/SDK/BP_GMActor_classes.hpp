#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GMActor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "UMG_structs.hpp"
#include "b1MinusManaged_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GMActor.BP_GMActor_C
// 0x0080 (0x02F8 - 0x0278)
class ABP_GMActor_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        TimeDilation;                                      // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            GMPanelWidget;                                     // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MouseTemp;                                         // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBUI_Widget*                            GMInfoPanelWidget_Enemy;                           // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseFreeCamera;                                     // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBUI_Widget*                            ZBBPanel;                                          // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableAllSkillsByDefault;                          // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x3];                                      // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         GMInfdo_PressNum;                                  // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBUI_Widget*                            GMInfoPanelWidget_Player;                          // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            UI_Debug_RT;                                       // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DisplayDebugSphereDuration;                        // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMiniGmShow;                                      // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBUI_Widget*                            BugReporter;                                       // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LT;                                                // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RT;                                                // 0x02E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GMXboxConsoleTest;                                 // 0x02EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EB[0x5];                                      // 0x02EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMediaPlayerTest_UMG_C*                 GMXboxTestWidget;                                  // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OCEANTest();
	void InpActEvt_Pause_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_NumPadZero_K2Node_InputKeyEvent_11(const struct FKey& Key);
	void InpActEvt_NumPadSeven_K2Node_InputKeyEvent_8(const struct FKey& Key);
	void InpActEvt_NumPadNine_K2Node_InputKeyEvent_9(const struct FKey& Key);
	void InpActEvt_NumPadFive_K2Node_InputKeyEvent_7(const struct FKey& Key);
	void InpActEvt_NumPadEight_K2Node_InputKeyEvent_10(const struct FKey& Key);
	void InpActEvt_H_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_Gamepad_Special_Right_K2Node_InputKeyEvent_4(const struct FKey& Key);
	void InpActEvt_Gamepad_Special_Right_K2Node_InputKeyEvent_3(const struct FKey& Key);
	void InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_6(const struct FKey& Key);
	void InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_5(const struct FKey& Key);
	void InpActEvt_Five_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void InpActEvt_F1_K2Node_InputKeyEvent_14(const struct FKey& Key);
	void InpActEvt_Divide_K2Node_InputKeyEvent_13(const struct FKey& Key);
	void InpActEvt_Ctrl_NumPadZero_K2Node_InputKeyEvent_12(const struct FKey& Key);
	void InpActEvt_CtrlPlusAltPlusShift_K_K2Node_InputKeyEvent_15(const struct FKey& Key);
	void InitGMFunctions();
	void GMInfoShowOrNot(class UBUI_Widget* Widget, class UClass* WidgetClass, bool ShowOrNot);
	void ExecuteUbergraph_BP_GMActor(int32 EntryPoint);
	void EnableMouseCursor(EGSInputModeChangeReason ChangeReason);
	void DisableMouseCursor(EGSInputModeChangeReason ChangeReason);
	void DisableGMPanel();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GMActor_C">();
	}
	static class ABP_GMActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GMActor_C>();
	}
};
static_assert(alignof(ABP_GMActor_C) == 0x000008, "Wrong alignment on ABP_GMActor_C");
static_assert(sizeof(ABP_GMActor_C) == 0x0002F8, "Wrong size on ABP_GMActor_C");
static_assert(offsetof(ABP_GMActor_C, UberGraphFrame) == 0x000278, "Member 'ABP_GMActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_GMActor_C, DefaultSceneRoot) == 0x000280, "Member 'ABP_GMActor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_GMActor_C, TimeDilation) == 0x000288, "Member 'ABP_GMActor_C::TimeDilation' has a wrong offset!");
static_assert(offsetof(ABP_GMActor_C, GMPanelWidget) == 0x000290, "Member 'ABP_GMActor_C::GMPanelWidget' has a wrong offset!");
static_assert(offsetof(ABP_GMActor_C, MouseTemp) == 0x000298, "Member 'ABP_GMActor_C::MouseTemp' has a wrong offset!");
static_assert(offsetof(ABP_GMActor_C, GMInfoPanelWidget_Enemy) == 0x0002A0, "Member 'ABP_GMActor_C::GMInfoPanelWidget_Enemy' has a wrong offset!");
static_assert(offsetof(ABP_GMActor_C, UseFreeCamera) == 0x0002A8, "Member 'ABP_GMActor_C::UseFreeCamera' has a wrong offset!");
static_assert(offsetof(ABP_GMActor_C, ZBBPanel) == 0x0002B0, "Member 'ABP_GMActor_C::ZBBPanel' has a wrong offset!");
static_assert(offsetof(ABP_GMActor_C, EnableAllSkillsByDefault) == 0x0002B8, "Member 'ABP_GMActor_C::EnableAllSkillsByDefault' has a wrong offset!");
static_assert(offsetof(ABP_GMActor_C, GMInfdo_PressNum) == 0x0002BC, "Member 'ABP_GMActor_C::GMInfdo_PressNum' has a wrong offset!");
static_assert(offsetof(ABP_GMActor_C, GMInfoPanelWidget_Player) == 0x0002C0, "Member 'ABP_GMActor_C::GMInfoPanelWidget_Player' has a wrong offset!");
static_assert(offsetof(ABP_GMActor_C, UI_Debug_RT) == 0x0002C8, "Member 'ABP_GMActor_C::UI_Debug_RT' has a wrong offset!");
static_assert(offsetof(ABP_GMActor_C, DisplayDebugSphereDuration) == 0x0002D0, "Member 'ABP_GMActor_C::DisplayDebugSphereDuration' has a wrong offset!");
static_assert(offsetof(ABP_GMActor_C, IsMiniGmShow) == 0x0002D8, "Member 'ABP_GMActor_C::IsMiniGmShow' has a wrong offset!");
static_assert(offsetof(ABP_GMActor_C, BugReporter) == 0x0002E0, "Member 'ABP_GMActor_C::BugReporter' has a wrong offset!");
static_assert(offsetof(ABP_GMActor_C, LT) == 0x0002E8, "Member 'ABP_GMActor_C::LT' has a wrong offset!");
static_assert(offsetof(ABP_GMActor_C, RT) == 0x0002E9, "Member 'ABP_GMActor_C::RT' has a wrong offset!");
static_assert(offsetof(ABP_GMActor_C, GMXboxConsoleTest) == 0x0002EA, "Member 'ABP_GMActor_C::GMXboxConsoleTest' has a wrong offset!");
static_assert(offsetof(ABP_GMActor_C, GMXboxTestWidget) == 0x0002F0, "Member 'ABP_GMActor_C::GMXboxTestWidget' has a wrong offset!");

}

