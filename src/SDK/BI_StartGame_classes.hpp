#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BI_StartGame

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "b1MinusManaged_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BI_StartGame.BI_StartGame_C
// 0x0090 (0x0548 - 0x04B8)
class UBI_StartGame_C final : public UBUI_Button
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       GSAKBStateAnim_2;                                  // 0x04C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAKBOnlineMarker;                                 // 0x04C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MinusMinusMinusMinusMinusMinusMinusMinusMinusMinus; // 0x04D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimDisable;                                     // 0x04D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimActived;                                     // 0x04E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimFocused;                                     // 0x04E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimHovered;                                     // 0x04F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimNormal;                                      // 0x04F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinus; // 0x0500(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAnimPressed;                                     // 0x0508(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAKBStateAnim;                                    // 0x0510(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBI_TextLoop_C*                         BI_TextLoop;                                       // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImgArrow_test;                                     // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGSImage*                               ImgBar;                                            // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGSImage*                               ImgBarAct;                                         // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImgOnline;                                         // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImgRedPoint;                                       // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void PreConstruct(bool IsDesignTime);
	void ExecuteUbergraph_BI_StartGame(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BI_StartGame_C">();
	}
	static class UBI_StartGame_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBI_StartGame_C>();
	}
};
static_assert(alignof(UBI_StartGame_C) == 0x000008, "Wrong alignment on UBI_StartGame_C");
static_assert(sizeof(UBI_StartGame_C) == 0x000548, "Wrong size on UBI_StartGame_C");
static_assert(offsetof(UBI_StartGame_C, UberGraphFrame) == 0x0004B8, "Member 'UBI_StartGame_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBI_StartGame_C, GSAKBStateAnim_2) == 0x0004C0, "Member 'UBI_StartGame_C::GSAKBStateAnim_2' has a wrong offset!");
static_assert(offsetof(UBI_StartGame_C, GSAKBOnlineMarker) == 0x0004C8, "Member 'UBI_StartGame_C::GSAKBOnlineMarker' has a wrong offset!");
static_assert(offsetof(UBI_StartGame_C, MinusMinusMinusMinusMinusMinusMinusMinusMinusMinus) == 0x0004D0, "Member 'UBI_StartGame_C::MinusMinusMinusMinusMinusMinusMinusMinusMinusMinus' has a wrong offset!");
static_assert(offsetof(UBI_StartGame_C, GSAnimDisable) == 0x0004D8, "Member 'UBI_StartGame_C::GSAnimDisable' has a wrong offset!");
static_assert(offsetof(UBI_StartGame_C, GSAnimActived) == 0x0004E0, "Member 'UBI_StartGame_C::GSAnimActived' has a wrong offset!");
static_assert(offsetof(UBI_StartGame_C, GSAnimFocused) == 0x0004E8, "Member 'UBI_StartGame_C::GSAnimFocused' has a wrong offset!");
static_assert(offsetof(UBI_StartGame_C, GSAnimHovered) == 0x0004F0, "Member 'UBI_StartGame_C::GSAnimHovered' has a wrong offset!");
static_assert(offsetof(UBI_StartGame_C, GSAnimNormal) == 0x0004F8, "Member 'UBI_StartGame_C::GSAnimNormal' has a wrong offset!");
static_assert(offsetof(UBI_StartGame_C, MinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinus) == 0x000500, "Member 'UBI_StartGame_C::MinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinus' has a wrong offset!");
static_assert(offsetof(UBI_StartGame_C, GSAnimPressed) == 0x000508, "Member 'UBI_StartGame_C::GSAnimPressed' has a wrong offset!");
static_assert(offsetof(UBI_StartGame_C, GSAKBStateAnim) == 0x000510, "Member 'UBI_StartGame_C::GSAKBStateAnim' has a wrong offset!");
static_assert(offsetof(UBI_StartGame_C, BI_TextLoop) == 0x000518, "Member 'UBI_StartGame_C::BI_TextLoop' has a wrong offset!");
static_assert(offsetof(UBI_StartGame_C, ImgArrow_test) == 0x000520, "Member 'UBI_StartGame_C::ImgArrow_test' has a wrong offset!");
static_assert(offsetof(UBI_StartGame_C, ImgBar) == 0x000528, "Member 'UBI_StartGame_C::ImgBar' has a wrong offset!");
static_assert(offsetof(UBI_StartGame_C, ImgBarAct) == 0x000530, "Member 'UBI_StartGame_C::ImgBarAct' has a wrong offset!");
static_assert(offsetof(UBI_StartGame_C, ImgOnline) == 0x000538, "Member 'UBI_StartGame_C::ImgOnline' has a wrong offset!");
static_assert(offsetof(UBI_StartGame_C, ImgRedPoint) == 0x000540, "Member 'UBI_StartGame_C::ImgRedPoint' has a wrong offset!");

}

