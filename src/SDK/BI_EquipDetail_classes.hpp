#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BI_EquipDetail

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "b1MinusManaged_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BI_EquipDetail.BI_EquipDetail_C
// 0x0180 (0x0558 - 0x03D8)
class UBI_EquipDetail_C final : public UBUI_Widget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimUpgradeMax;                                    // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimUpgrade;                                       // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimDestroyed;                                     // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimForged;                                        // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimWeaponUnlock;                                  // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinus; // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AKBEquiped;                                        // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimEquiped;                                       // 0x0418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinus; // 0x0420(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AKBStateSuitTxt;                                   // 0x0428(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinus; // 0x0430(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAKBDetailState;                                  // 0x0438(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GSAKBShowHide;                                     // 0x0440(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBI_ComplexSecRoleAttr_C*               BI_ComplexSecRoleAttr_0;                           // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBI_ComplexSecRoleAttr_C*               BI_ComplexSecRoleAttr_1;                           // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBI_ComplexSecRoleAttr_C*               BI_ComplexSecRoleAttr_2;                           // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBI_ComplexSecRoleAttr_C*               BI_ComplexSecRoleAttr_3;                           // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBI_ComplexSecRoleAttr_C*               BI_ComplexSecRoleAttr_4;                           // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBI_ComplexSecRoleAttr_C*               BI_ComplexSecRoleAttr_5;                           // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBI_ComplexSecRoleAttr_C*               BI_ComplexSecRoleAttr_6;                           // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBI_ComplexSecRoleAttr_C*               BI_ComplexSecRoleAttr_7;                           // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBI_ComplexSecRoleAttr_C*               BI_ComplexSecRoleAttr_8;                           // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBI_ComplexSecRoleAttr_C*               BI_ComplexSecRoleAttr_9;                           // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBI_CostItem_C*                         BI_CostItem;                                       // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBI_DetailPageSwitcher_C*               BI_DetailPageSwitcher;                             // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBI_DetailLongPress_C*                  BI_EquipLongPress;                                 // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBI_GearDetailBg_C*                     BI_GearDetailBg;                                   // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBI_CostItemKey_C*                      BI_KeyCostItem;                                    // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBI_ScrollInputTips_WithComb_C*         BI_ScrollInputTips;                                // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBI_SuitDesc_C*                         BI_SuitDesc;                                       // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBI_SuitSPDesc_C*                       BI_SuitSPDesc;                                     // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBI_UIFXDetailForged_C*                 BI_UIFXDetailForged;                               // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBI_ScrollBoxNew_C*                     ContentScroll;                                     // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImgLegendBg;                                       // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImgPageFrame;                                      // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGSInputActionIcon*                     InputIconScroll;                                   // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MarkerForged;                                      // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MarkerWearing;                                     // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class b1MinusManaged::UGSRetainerBox*         RetainerMaskSuitDesc;                              // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Spline;                                            // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         TxtLegendDesc;                                     // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGSRichScaleText*                       TxtNameRuby;                                       // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UIFX_CurForge;                                     // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UIFX_CurForgeManual;                               // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              SparkLifeTime;                                     // 0x0540(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SparkSize;                                         // 0x0550(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BI_EquipDetail(int32 EntryPoint);
	void SequenceEvent__ENTRYPOINTBI_EquipDetail_9();
	void SequenceEvent__ENTRYPOINTBI_EquipDetail_8();
	void SequenceEvent__ENTRYPOINTBI_EquipDetail_7();
	void SequenceEvent__ENTRYPOINTBI_EquipDetail_6();
	void SequenceEvent__ENTRYPOINTBI_EquipDetail_5();
	void SequenceEvent__ENTRYPOINTBI_EquipDetail_4();
	void SequenceEvent__ENTRYPOINTBI_EquipDetail_3();
	void SequenceEvent__ENTRYPOINTBI_EquipDetail_2();
	void SequenceEvent__ENTRYPOINTBI_EquipDetail_10();
	void SequenceEvent__ENTRYPOINTBI_EquipDetail_1();
	void SequenceEvent__ENTRYPOINTBI_EquipDetail_0();
	void SeqFX_Stop_Top(class UNiagaraSystemWidget* NGForgeSpark_Top);
	void SeqFX_Stop_Right(class UNiagaraSystemWidget* NGForgeSpark_Right);
	void SeqFX_Stop_Left(class UNiagaraSystemWidget* NGForgeSpark_Left);
	void SeqFX_Stop_Destroyed(class UNiagaraSystemWidget* UINS_DestroyedSpark);
	void SeqFX_Play_Top(class UNiagaraSystemWidget* NGForgeSpark_Top);
	void SeqFX_Play_Right(class UNiagaraSystemWidget* NGForgeSpark_Right);
	void SeqFX_Play_Left(class UNiagaraSystemWidget* NGForgeSpark_Left);
	void SeqFX_Play_Destroyed(class UNiagaraSystemWidget* UINS_DestroyedSpark);
	void SeqEvent_AnimWeaponUnlock(const class FString& EventName);
	void SeqEvent_AnimUpgradeMax(const class FString& NewParam);
	void SeqEvent_AnimForged(const class FString& EventName);
	void SeqAnim_DetailBg_Upgrade();
	void SeqAnim_DetailBg_Forged();
	void SeqAnim_DetailBg_Equiped();
	void SeqAnim_DetailBg_Destroy();
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BI_EquipDetail_C">();
	}
	static class UBI_EquipDetail_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBI_EquipDetail_C>();
	}
};
static_assert(alignof(UBI_EquipDetail_C) == 0x000008, "Wrong alignment on UBI_EquipDetail_C");
static_assert(sizeof(UBI_EquipDetail_C) == 0x000558, "Wrong size on UBI_EquipDetail_C");
static_assert(offsetof(UBI_EquipDetail_C, UberGraphFrame) == 0x0003D8, "Member 'UBI_EquipDetail_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, AnimUpgradeMax) == 0x0003E0, "Member 'UBI_EquipDetail_C::AnimUpgradeMax' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, AnimUpgrade) == 0x0003E8, "Member 'UBI_EquipDetail_C::AnimUpgrade' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, AnimDestroyed) == 0x0003F0, "Member 'UBI_EquipDetail_C::AnimDestroyed' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, AnimForged) == 0x0003F8, "Member 'UBI_EquipDetail_C::AnimForged' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, AnimWeaponUnlock) == 0x000400, "Member 'UBI_EquipDetail_C::AnimWeaponUnlock' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, MinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinus) == 0x000408, "Member 'UBI_EquipDetail_C::MinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinus' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, AKBEquiped) == 0x000410, "Member 'UBI_EquipDetail_C::AKBEquiped' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, AnimEquiped) == 0x000418, "Member 'UBI_EquipDetail_C::AnimEquiped' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, MinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinus) == 0x000420, "Member 'UBI_EquipDetail_C::MinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinus' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, AKBStateSuitTxt) == 0x000428, "Member 'UBI_EquipDetail_C::AKBStateSuitTxt' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, MinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinus) == 0x000430, "Member 'UBI_EquipDetail_C::MinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinusMinus' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, GSAKBDetailState) == 0x000438, "Member 'UBI_EquipDetail_C::GSAKBDetailState' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, GSAKBShowHide) == 0x000440, "Member 'UBI_EquipDetail_C::GSAKBShowHide' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, BI_ComplexSecRoleAttr_0) == 0x000448, "Member 'UBI_EquipDetail_C::BI_ComplexSecRoleAttr_0' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, BI_ComplexSecRoleAttr_1) == 0x000450, "Member 'UBI_EquipDetail_C::BI_ComplexSecRoleAttr_1' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, BI_ComplexSecRoleAttr_2) == 0x000458, "Member 'UBI_EquipDetail_C::BI_ComplexSecRoleAttr_2' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, BI_ComplexSecRoleAttr_3) == 0x000460, "Member 'UBI_EquipDetail_C::BI_ComplexSecRoleAttr_3' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, BI_ComplexSecRoleAttr_4) == 0x000468, "Member 'UBI_EquipDetail_C::BI_ComplexSecRoleAttr_4' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, BI_ComplexSecRoleAttr_5) == 0x000470, "Member 'UBI_EquipDetail_C::BI_ComplexSecRoleAttr_5' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, BI_ComplexSecRoleAttr_6) == 0x000478, "Member 'UBI_EquipDetail_C::BI_ComplexSecRoleAttr_6' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, BI_ComplexSecRoleAttr_7) == 0x000480, "Member 'UBI_EquipDetail_C::BI_ComplexSecRoleAttr_7' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, BI_ComplexSecRoleAttr_8) == 0x000488, "Member 'UBI_EquipDetail_C::BI_ComplexSecRoleAttr_8' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, BI_ComplexSecRoleAttr_9) == 0x000490, "Member 'UBI_EquipDetail_C::BI_ComplexSecRoleAttr_9' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, BI_CostItem) == 0x000498, "Member 'UBI_EquipDetail_C::BI_CostItem' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, BI_DetailPageSwitcher) == 0x0004A0, "Member 'UBI_EquipDetail_C::BI_DetailPageSwitcher' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, BI_EquipLongPress) == 0x0004A8, "Member 'UBI_EquipDetail_C::BI_EquipLongPress' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, BI_GearDetailBg) == 0x0004B0, "Member 'UBI_EquipDetail_C::BI_GearDetailBg' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, BI_KeyCostItem) == 0x0004B8, "Member 'UBI_EquipDetail_C::BI_KeyCostItem' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, BI_ScrollInputTips) == 0x0004C0, "Member 'UBI_EquipDetail_C::BI_ScrollInputTips' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, BI_SuitDesc) == 0x0004C8, "Member 'UBI_EquipDetail_C::BI_SuitDesc' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, BI_SuitSPDesc) == 0x0004D0, "Member 'UBI_EquipDetail_C::BI_SuitSPDesc' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, BI_UIFXDetailForged) == 0x0004D8, "Member 'UBI_EquipDetail_C::BI_UIFXDetailForged' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, ContentScroll) == 0x0004E0, "Member 'UBI_EquipDetail_C::ContentScroll' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, ImgLegendBg) == 0x0004E8, "Member 'UBI_EquipDetail_C::ImgLegendBg' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, ImgPageFrame) == 0x0004F0, "Member 'UBI_EquipDetail_C::ImgPageFrame' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, InputIconScroll) == 0x0004F8, "Member 'UBI_EquipDetail_C::InputIconScroll' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, MarkerForged) == 0x000500, "Member 'UBI_EquipDetail_C::MarkerForged' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, MarkerWearing) == 0x000508, "Member 'UBI_EquipDetail_C::MarkerWearing' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, RetainerMaskSuitDesc) == 0x000510, "Member 'UBI_EquipDetail_C::RetainerMaskSuitDesc' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, Spline) == 0x000518, "Member 'UBI_EquipDetail_C::Spline' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, TxtLegendDesc) == 0x000520, "Member 'UBI_EquipDetail_C::TxtLegendDesc' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, TxtNameRuby) == 0x000528, "Member 'UBI_EquipDetail_C::TxtNameRuby' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, UIFX_CurForge) == 0x000530, "Member 'UBI_EquipDetail_C::UIFX_CurForge' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, UIFX_CurForgeManual) == 0x000538, "Member 'UBI_EquipDetail_C::UIFX_CurForgeManual' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, SparkLifeTime) == 0x000540, "Member 'UBI_EquipDetail_C::SparkLifeTime' has a wrong offset!");
static_assert(offsetof(UBI_EquipDetail_C, SparkSize) == 0x000550, "Member 'UBI_EquipDetail_C::SparkSize' has a wrong offset!");

}

